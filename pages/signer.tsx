import Head from 'next/head'
import styles from 'styles/Home.module.css'
import { ProviderKeeper } from '@waves/provider-keeper'
import { Signer } from '@waves/signer'
import { useState } from 'react'

export default function Home() {
  const input = { color: '#000' }

  const [address, setAddress] = useState<string>('')
  const [publicKey, setPublicKey] = useState<string>('')
  const [signature, setSignature] = useState<string>('')
  const [message, setMessage] = useState<string>('')
  const testSign = async (value: object) => {
    const signer = new Signer({
      // Specify URL of the node on Testnet
      NODE_URL: 'https://nodes-testnet.wavesnodes.com',
    })
    setMessage(JSON.stringify(value))

    const provider = new ProviderKeeper()
    await signer.setProvider(provider)

    const userData = await signer.login()
    const signature = await signer.signMessage(message)

    setSignature(signature)
    setPublicKey(userData.publicKey)
    setAddress(userData.address)

    return true
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <button
          style={{
            backgroundColor: '#4CAF50',
            color: 'white',
            padding: '15px 32px',
            textAlign: 'center',
            textDecoration: 'none',
            display: 'inline-block',
            fontSize: '16px',
          }}
          onClick={() =>
            testSign({
              created: 1670503588539,
              votingPower: 100,
              voter: '2rJ1AQ2M8tW5tdEyhBG55XFgg7NwuHvYVDCSScWVV7y6',
              address: '3N39snwEekBGbcXi37yu32p7Gu1FrZhDPJJ',
              space: 'adazo-dao',
              proposal: '4923587d-6c99-474b-b7ae-32c3d1a12968',
              reason: '',
              choice: '1',
            })
          }
        >
          Sign message
        </button>
        Signed message: <input type="text" style={input} defaultValue={signature} />
        Message: <input type="text" style={input} defaultValue={message} />
        Address: <input type="text" style={input} defaultValue={address} />
        PK: <input type="text" style={input} defaultValue={publicKey} />
      </main>
    </div>
  )
}
